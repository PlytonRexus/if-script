/*! For license information please see 151.017026c32fa407b09f1f.bundle.js.LICENSE.txt */
(self.webpackChunkif_script=self.webpackChunkif_script||[]).push([[151],{144:function(s){var e;e=function(){function s(e,n,i){return this.id=++s.highestId,this.name=e,this.symbols=n,this.postprocess=i,this}function e(s,e,n,i){this.rule=s,this.dot=e,this.reference=n,this.data=[],this.wantedBy=i,this.isComplete=this.dot===s.symbols.length}function n(s,e){this.grammar=s,this.index=e,this.states=[],this.wants={},this.scannable=[],this.completed={}}function i(s,e){this.rules=s,this.start=e||this.rules[0].name;var n=this.byName={};this.rules.forEach((function(s){n.hasOwnProperty(s.name)||(n[s.name]=[]),n[s.name].push(s)}))}function r(){this.reset("")}function o(s,e,o){if(s instanceof i){var t=s;o=e}else t=i.fromCompiled(s,e);for(var $ in this.grammar=t,this.options={keepHistory:!1,lexer:t.lexer||new r},o||{})this.options[$]=o[$];this.lexer=this.options.lexer,this.lexerState=void 0;var p=new n(t,0);this.table=[p],p.wants[t.start]=[],p.predict(t.start),p.process(),this.current=0}function t(s){var e=typeof s;if("string"===e)return s;if("object"===e){if(s.literal)return JSON.stringify(s.literal);if(s instanceof RegExp)return s.toString();if(s.type)return"%"+s.type;if(s.test)return"<"+String(s.test)+">";throw new Error("Unknown symbol type: "+s)}}return s.highestId=0,s.prototype.toString=function(s){var e=void 0===s?this.symbols.map(t).join(" "):this.symbols.slice(0,s).map(t).join(" ")+" ● "+this.symbols.slice(s).map(t).join(" ");return this.name+" → "+e},e.prototype.toString=function(){return"{"+this.rule.toString(this.dot)+"}, from: "+(this.reference||0)},e.prototype.nextState=function(s){var n=new e(this.rule,this.dot+1,this.reference,this.wantedBy);return n.left=this,n.right=s,n.isComplete&&(n.data=n.build(),n.right=void 0),n},e.prototype.build=function(){var s=[],e=this;do{s.push(e.right.data),e=e.left}while(e.left);return s.reverse(),s},e.prototype.finish=function(){this.rule.postprocess&&(this.data=this.rule.postprocess(this.data,this.reference,o.fail))},n.prototype.process=function(s){for(var e=this.states,n=this.wants,i=this.completed,r=0;r<e.length;r++){var t=e[r];if(t.isComplete){if(t.finish(),t.data!==o.fail){for(var $=t.wantedBy,p=$.length;p--;){var b=$[p];this.complete(b,t)}if(t.reference===this.index){var u=t.rule.name;(this.completed[u]=this.completed[u]||[]).push(t)}}}else{if("string"!=typeof(u=t.rule.symbols[t.dot])){this.scannable.push(t);continue}if(n[u]){if(n[u].push(t),i.hasOwnProperty(u)){var c=i[u];for(p=0;p<c.length;p++){var l=c[p];this.complete(t,l)}}}else n[u]=[t],this.predict(u)}}},n.prototype.predict=function(s){for(var n=this.grammar.byName[s]||[],i=0;i<n.length;i++){var r=n[i],o=this.wants[s],t=new e(r,0,this.index,o);this.states.push(t)}},n.prototype.complete=function(s,e){var n=s.nextState(e);this.states.push(n)},i.fromCompiled=function(e,n){var r=e.Lexer;e.ParserStart&&(n=e.ParserStart,e=e.ParserRules);var o=new i(e=e.map((function(e){return new s(e.name,e.symbols,e.postprocess)})),n);return o.lexer=r,o},r.prototype.reset=function(s,e){this.buffer=s,this.index=0,this.line=e?e.line:1,this.lastLineBreak=e?-e.col:0},r.prototype.next=function(){if(this.index<this.buffer.length){var s=this.buffer[this.index++];return"\n"===s&&(this.line+=1,this.lastLineBreak=this.index),{value:s}}},r.prototype.save=function(){return{line:this.line,col:this.index-this.lastLineBreak}},r.prototype.formatError=function(s,e){var n=this.buffer;if("string"==typeof n){var i=n.split("\n").slice(Math.max(0,this.line-5),this.line),r=n.indexOf("\n",this.index);-1===r&&(r=n.length);var o=this.index-this.lastLineBreak,t=String(this.line).length;return e+=" at line "+this.line+" col "+o+":\n\n",(e+=i.map((function(s,e){return $(this.line-i.length+e+1,t)+" "+s}),this).join("\n"))+"\n"+$("",t+o)+"^\n"}return e+" at index "+(this.index-1);function $(s,e){var n=String(s);return Array(e-n.length+1).join(" ")+n}},o.fail={},o.prototype.feed=function(s){var e,i=this.lexer;for(i.reset(s,this.lexerState);;){try{if(!(e=i.next()))break}catch(s){var o=new n(this.grammar,this.current+1);throw this.table.push(o),(p=new Error(this.reportLexerError(s))).offset=this.current,p.token=s.token,p}var t=this.table[this.current];this.options.keepHistory||delete this.table[this.current-1];var $=this.current+1;o=new n(this.grammar,$),this.table.push(o);for(var p,b=void 0!==e.text?e.text:e.value,u=i.constructor===r?e.value:e,c=t.scannable,l=c.length;l--;){var a=c[l],x=a.rule.symbols[a.dot];if(x.test?x.test(u):x.type?x.type===e.type:x.literal===b){var h=a.nextState({data:u,token:e,isToken:!0,reference:$-1});o.states.push(h)}}if(o.process(),0===o.states.length)throw(p=new Error(this.reportError(e))).offset=this.current,p.token=e,p;this.options.keepHistory&&(t.lexerState=i.save()),this.current++}return t&&(this.lexerState=i.save()),this.results=this.finish(),this},o.prototype.reportLexerError=function(s){var e,n,i=s.token;return i?(e="input "+JSON.stringify(i.text[0])+" (lexer error)",n=this.lexer.formatError(i,"Syntax error")):(e="input (lexer error)",n=s.message),this.reportErrorCommon(n,e)},o.prototype.reportError=function(s){var e=(s.type?s.type+" token: ":"")+JSON.stringify(void 0!==s.value?s.value:s),n=this.lexer.formatError(s,"Syntax error");return this.reportErrorCommon(n,e)},o.prototype.reportErrorCommon=function(s,e){var n=[];n.push(s);var i=this.table.length-2,r=this.table[i],o=r.states.filter((function(s){var e=s.rule.symbols[s.dot];return e&&"string"!=typeof e}));return 0===o.length?(n.push("Unexpected "+e+". I did not expect any more input. Here is the state of my parse table:\n"),this.displayStateStack(r.states,n)):(n.push("Unexpected "+e+". Instead, I was expecting to see one of the following:\n"),o.map((function(s){return this.buildFirstStateStack(s,[])||[s]}),this).forEach((function(s){var e=s[0],i=e.rule.symbols[e.dot],r=this.getSymbolDisplay(i);n.push("A "+r+" based on:"),this.displayStateStack(s,n)}),this)),n.push(""),n.join("\n")},o.prototype.displayStateStack=function(s,e){for(var n,i=0,r=0;r<s.length;r++){var o=s[r],t=o.rule.toString(o.dot);t===n?i++:(i>0&&e.push("    ^ "+i+" more lines identical to this"),i=0,e.push("    "+t)),n=t}},o.prototype.getSymbolDisplay=function(s){return function(s){var e=typeof s;if("string"===e)return s;if("object"===e){if(s.literal)return JSON.stringify(s.literal);if(s instanceof RegExp)return"character matching "+s;if(s.type)return s.type+" token";if(s.test)return"token matching "+String(s.test);throw new Error("Unknown symbol type: "+s)}}(s)},o.prototype.buildFirstStateStack=function(s,e){if(-1!==e.indexOf(s))return null;if(0===s.wantedBy.length)return[s];var n=s.wantedBy[0],i=[s].concat(e),r=this.buildFirstStateStack(n,i);return null===r?null:[s].concat(r)},o.prototype.save=function(){var s=this.table[this.current];return s.lexerState=this.lexerState,s},o.prototype.restore=function(s){var e=s.index;this.current=e,this.table[e]=s,this.table.splice(e+1),this.lexerState=s.lexerState,this.results=this.finish()},o.prototype.rewind=function(s){if(!this.options.keepHistory)throw new Error("set option `keepHistory` to enable rewinding");this.restore(this.table[s])},o.prototype.finish=function(){var s=[],e=this.grammar.start;return this.table[this.table.length-1].states.forEach((function(n){n.rule.name===e&&n.dot===n.rule.symbols.length&&0===n.reference&&n.data!==o.fail&&s.push(n)})),s.map((function(s){return s.data}))},{Parser:o,Grammar:i,Rule:s}},s.exports?s.exports=e():this.nearley=e()},291:(s,e,n)=>{"use strict";n.d(e,{Z:()=>i});const i={"=":1,"||":2,"&&":3,"<":7,">":7,"<=":7,">=":7,"==":7,"!=":7,"+":10,"-":10,"*":20,"/":20,"%":20}},903:(s,e,n)=>{"use strict";n.d(e,{T:()=>i});const i={section:/ss>[a-zA-Z0-9`@"'-_:;\/\s!\*#\$\{\}]+?<ss/g,comment:/\/\*[\s\S]*?\*\/|([^:]|^)\/\/.*$/gm,passage:/pp>[a-zA-Z0-9"'-_:,\/\s!\*#;]+?<pp/g,title:/tt>[A-Za-z0-9 '\$\{\}]+?<tt/g,para:/>>[a-zA-Z0-9"'-_:;\/\s!\*#\.\[\]\$\{\}]+?<</g,choice:/ch>[a-zA-Z0-9"'-_:;\/\s!\*#\.\[\]\$\{\}]+?<ch/g,choiceTarget:/\[\[[0-9]+\]\]/g,settings:/settings>[a-zA-Z0-9"'-_:;\/\s!\*#\.\$\{\}]+?<settings/,referrable:/@referrable (true)|(false)/,startAt:/@startAt [0-9]+/,fullTimer:/@fullTimer [0-9]+ \[\[\d+\]\]/,sectionSettings:/secset>[a-zA-Z0-9"'-_:;\/\s!\*#\.]+?<secset/,variable:/\$\{[a-zA-Z0-9=]+?\}/g,input:/__input/,secTimer:/@timer [0-9]+ \[\[\d+\]\]/,variableAssignment:/\$\{[a-zA-Z0-9]+?=[a-zA-Z0-9_ "'\(\)]+?\}/g,varValue:/[a-zA-Z0-9_ "\(\)]+/,setVarAsTarget:/\$\{__[a-zA-Z0-9_=]+?\}/g,html:/<\s*\w+[^>]*>(.*?)(<\s*\/\s*\w+>)|/g,scene:/scene>[a-zA-Z0-9"'-_:;@\/\s!\*#\$\{\}]+?<scene/gm}},513:(s,e,n)=>{"use strict";n.d(e,{Z:()=>r});class i extends Error{constructor(){super(),this.type="IFError"}}const r=i},721:(s,e,n)=>{"use strict";n.d(e,{Z:()=>o});var i=n(513);class r extends i.Z{constructor(s="",e,n,i){super(),this.message=s,this.line=this.message,this.col=n,i&&this.log()}log(){console.log((this.line,this.col?"at: "+this.line+":"+this.col:""))}}const o=r},546:(s,e,n)=>{"use strict";n.d(e,{Z:()=>t});var i=n(291),r=n(608);class o{_class="Action";constructor(s,e,n,t,$){$?("string"==typeof $&&($=JSON.parse($)),Object.assign(this,$),"Action"===this.left._class?this.left=o.fromJson(this.left):"Token"===this.left._class&&(this.left=r.Z.fromJson(this.left)),"Action"===this.right._class?this.right=o.fromJson(this.right):"Token"===this.right._class&&(this.right=r.Z.fromJson(this.right))):(this.type=s,this.operator=e,this.left=n,this.right=t),this.precedence=i.Z[this.operator]}static fromJson(s){return new o(null,null,null,null,s)}}const t=o},858:(s,e,n)=>{"use strict";n.d(e,{Z:()=>$});var i=n(546),r=n(608),o=n(72);class t{_class="Choice";constructor(s,e,n){if(n){"string"==typeof n&&(n=JSON.parse(n));let{owner:s,target:e,text:t,variables:$,mode:p,choiceI:b,condition:u,actions:c,input:l,targetType:a}=n;this.mode=p,this.text=t,this.owner=s,this.target=e,this.variables=$,this.choiceI=b,this.condition=u||null,this.actions=c,this.input="input"===this.mode?l:null,this.targetType=a||"section",this.actions=(this.actions||[]).map(i.Z.fromJson),this.text=(this.text||[]).map((s=>"Token"===s._class?r.Z.fromJson(s):"ConditionalBlock"===s._class?o.Z.fromJson(s):"Action"===s._class?i.Z.fromJson(s):void 0))}else{let{owner:n,target:i,text:r}=s,{variables:o,mode:t,choiceI:$,condition:p,actions:b,input:u,targetType:c}=e;this.mode=t,this.text=r,this.owner=n,this.target=i,this.variables=o,this.choiceI=$,this.condition=p||null,this.actions=b,this.input="input"===this.mode?u:null,this.targetType=c||"section"}}static fromJson(s){return new t({},{},s)}get type(){return this._class}set type(s){this._class=s}}const $=t},72:(s,e,n)=>{"use strict";n.d(e,{Z:()=>$});var i=n(546),r=n(608),o=n(858);class t{_class="ConditionalBlock";constructor(s,e){e&&("string"==typeof e&&(e=JSON.parse(e)),"Action"===(s=e).cond._class&&(s.cond=i.Z.fromJson(s.cond)),s.then&&"Action"===s.then._class?s.then=i.Z.fromJson(s.then):s.then&&"ConditionalBlock"===s.then._class?s.then=t.fromJson(s.then):s.then&&"Token"===s.then._class?s.then=r.Z.fromJson(s.then):s.then&&"Choice"===s.then._class&&(s.then=o.Z.fromJson(s.then)),void 0!==s.else&&s.else&&"Action"===s.else._class?s.else=i.Z.fromJson(s.else):void 0!==s.else&&s.else&&"ConditionalBlock"===s.else._class?s.else=t.fromJson(s.else):void 0!==s.else&&s.else&&"Token"===s.else._class?s.else=r.Z.fromJson(s.else):void 0!==s.else&&s.else&&"Choice"===s.else._class&&(s.else=o.Z.fromJson(s.else)));const{cond:n,then:$}=s;this.cond=n,this.then=$,this.else=s.else}static fromJson(s){return new t({},s)}get type(){return this._class}set type(s){this._class=s}}const $=t},861:(s,e,n)=>{"use strict";n.d(e,{Z:()=>o});var i=n(721);class r{_class="Scene";get type(){return this._class}set type(s){this._class=s}constructor(s,{first:e,name:n},r){if(r&&("string"==typeof r&&(r=JSON.parse(r)),s=r.sections,e=r.first,n=r.name),!(s instanceof Array))throw new i.Z("Unexpected argument supplied."+s+"is not an array.");this.sections=s,this.first=e||s[0],this.last=s?s[s.length-1]:null,this.name=n||"Untitled"}static fromJson(s){return new r([],{},s)}}const o=r},167:(s,e,n)=>{"use strict";n.d(e,{Z:()=>b});var i=n(858),r=n(608),o=n(72),t=n(546),$=n(470);class p{_class="Section";constructor(s,e,n,p,b){b?("string"==typeof b&&(b=JSON.parse(b)),Object.assign(this,b),this.choices=this.choices.map((s=>i.Z.fromJson(s))),this.text=(this.text||[]).map((s=>"Token"===s._class?r.Z.fromJson(s):"ConditionalBlock"===s._class?o.Z.fromJson(s):"Action"===s._class?t.Z.fromJson(s):"Choice"===s._class?i.Z.fromJson(s):void 0)),this.settings=$.Z.fromJson(this.settings)):(this.text="string"==typeof s?s.trim():s,this.title=p.title,this.choices=e,this.serial=n,this.settings=p,this.identifier=p.identifier)}static fromJson(s){return new p({},{},{},{},s)}findChoice(s){let e,n=parseInt(s);return s&&(s=n),"number"==typeof s?e=this.choices.findIndex((e=>e.choiceI===s)):"string"==typeof s&&(e=this.choices.findIndex((e=>e.identifier?.toLowerCase()===s?.toLowerCase()))),-1===e&&(e=0),this.choices[e]}get type(){return this._class}set type(s){this._class=s}}const b=p},470:(s,e,n)=>{"use strict";n.d(e,{Z:()=>o});var i=n(13);class r extends i.Z{_class="SectionSettings";get type(){return this._class}set type(s){this._class=s}constructor(s,e){e&&("string"==typeof e&&(e=JSON.parse(e)),s=e),super(s),this.timer=s.timer,this.title=s.title,this.variables={}}static fromJson(s){return new r({},s)}}const o=r},13:(s,e,n)=>{"use strict";n.d(e,{Z:()=>r});class i{_class="Settings";get type(){return this._class}set type(s){this._class=s}constructor(s,e){e?("string"==typeof e&&(e=JSON.parse(e)),this.input=e.input):this.input=s}static fromJson(s){return new i({},s)}}const r=i},207:(s,e,n)=>{"use strict";n.d(e,{Z:()=>$});var i=n(167),r=n(861),o=n(146);class t{_class="Story";get type(){return this._class}set type(s){this._class=s}constructor(s,{sections:e,passages:n,scenes:t},$,{globals:p,stats:b},u){u?("string"==typeof u&&(u=JSON.parse(u)),Object.assign(this,u),this.sections=this.sections.map((s=>i.Z.fromJson(s))),this.scenes=this.scenes.map((s=>r.Z.fromJson(s))),this.settings=o.Z.fromJson(this.settings)):(this.name=s.trim(),this.sections=e||[],this.passages=n||[],this.scenes=t||[],this.settings=$,this.variables={},p&&Object.keys(p).forEach((s=>{this.variables[s]=p[s]})),this.persistent=this.variables,this.stats=b)}static fromJson(s){return new t({},{},{},{},s)}findSection(s){let e;return"number"==typeof s?e=this.sections.findIndex((e=>e.serial===s)):"string"==typeof s&&(e=this.sections.findIndex((e=>e.identifier?.toLowerCase()===s?.toLowerCase()))),-1===e&&(console.warn("No section "+s+" found. Reverting to default section serial 1."),e=0),this.sections[e]}findScene(s){let e;return"number"==typeof s?e=this.scenes.findIndex((e=>e.serial===s)):"string"==typeof s&&(e=this.scenes.findIndex((e=>e.identifier?.toLowerCase()===s?.toLowerCase()))),-1===e&&(console.warn("No scene "+s+" found. Reverting to default scene serial 1."),e=0),this.scenes[e]}findPassage(s){let e=this.passages.findIndex((e=>e.serial===s));return-1===e&&(console.warn("No passage "+s+" found. Reverting to default passage serial 1."),e=0),this.passages[e]}}const $=t},146:(s,e,n)=>{"use strict";n.d(e,{Z:()=>o});var i=n(13);class r extends i.Z{_class="StorySettings";get type(){return this._class}set type(s){this._class=s}constructor(s,e){e&&("string"==typeof e&&(e=JSON.parse(e)),s=e),super(s);const{referrable:n,name:i}=this.input;this.startAt=this.input.startAt||0,this.fullTimer=this.input.fullTimer||null,this.referrable=n||!1,this.name=i}static fromJson(s){return new r({},s)}}const o=r},608:(s,e,n)=>{"use strict";n.d(e,{Z:()=>r});class i{_class="Token";constructor(s,e){e&&("string"==typeof e&&(e=JSON.parse(e)),s=e);const{type:n,symbol:i,id:r,line:o,col:t}=s;this.type=s.type,this.symbol=s.symbol,this.id=s.id,this.line=s.line,this.col=s.col}static fromJson(s){return new i(null,s)}}const r=i},151:(s,e,n)=>{"use strict";n.r(e),n.d(e,{Story:()=>c.Z,default:()=>h,parseText:()=>x,variableRegex:()=>a});var i=n(144);function r(s){return s[0]}class o{constructor(s,e,n,i,{timer:r,music:o}){this.title=s.trim(),this.text=e.trim(),this.choices=n,this.serial=i,this.settings={},this.settings.timer=r,this.settings.music=o}findChoice(s){let e=this.choices.findIndex((e=>e.choiceI==s));return-1===e&&(e=0),this.choices[e]}get type(){return"Section"}}class t{constructor(s,e,n,i,r,o,t,$,p){this.mode=r,this.text=n.trim(),this.owner=s,this.target=e,this.variables=i,this.choiceI=o,this.condition=t||null,this.actions=$,this.targetType=p||"section"}get type(){return"Choice"}}const $={Lexer:void 0,ParserRules:[{name:"section$string$1",symbols:[{literal:"s"},{literal:"s"},{literal:">"}],postprocess:function(s){return s.join("")}},{name:"section$subexpression$1$subexpression$1$string$1",symbols:[{literal:"s"},{literal:"e"},{literal:"c"},{literal:"s"},{literal:"e"},{literal:"t"},{literal:">"}],postprocess:function(s){return s.join("")}},{name:"section$subexpression$1$subexpression$1$ebnf$1$subexpression$1$string$1",symbols:[{literal:"@"},{literal:"t"},{literal:"i"},{literal:"m"},{literal:"e"},{literal:"r"},{literal:" "}],postprocess:function(s){return s.join("")}},{name:"section$subexpression$1$subexpression$1$ebnf$1$subexpression$1$string$2",symbols:[{literal:"["},{literal:"["}],postprocess:function(s){return s.join("")}},{name:"section$subexpression$1$subexpression$1$ebnf$1$subexpression$1$string$3",symbols:[{literal:"]"},{literal:"]"}],postprocess:function(s){return s.join("")}},{name:"section$subexpression$1$subexpression$1$ebnf$1$subexpression$1",symbols:["section$subexpression$1$subexpression$1$ebnf$1$subexpression$1$string$1","int","__","section$subexpression$1$subexpression$1$ebnf$1$subexpression$1$string$2","int","section$subexpression$1$subexpression$1$ebnf$1$subexpression$1$string$3","_"]},{name:"section$subexpression$1$subexpression$1$ebnf$1",symbols:["section$subexpression$1$subexpression$1$ebnf$1$subexpression$1"],postprocess:r},{name:"section$subexpression$1$subexpression$1$ebnf$1",symbols:[],postprocess:function(s){return null}},{name:"section$subexpression$1$subexpression$1$ebnf$2$subexpression$1$string$1",symbols:[{literal:"@"},{literal:"m"},{literal:"u"},{literal:"s"},{literal:"i"},{literal:"c"},{literal:" "}],postprocess:function(s){return s.join("")}},{name:"section$subexpression$1$subexpression$1$ebnf$2$subexpression$1",symbols:["section$subexpression$1$subexpression$1$ebnf$2$subexpression$1$string$1","_","oneline","_"]},{name:"section$subexpression$1$subexpression$1$ebnf$2",symbols:["section$subexpression$1$subexpression$1$ebnf$2$subexpression$1"],postprocess:r},{name:"section$subexpression$1$subexpression$1$ebnf$2",symbols:[],postprocess:function(s){return null}},{name:"section$subexpression$1$subexpression$1$string$2",symbols:[{literal:"<"},{literal:"s"},{literal:"e"},{literal:"c"},{literal:"s"},{literal:"e"},{literal:"t"}],postprocess:function(s){return s.join("")}},{name:"section$subexpression$1$subexpression$1",symbols:["section$subexpression$1$subexpression$1$string$1","_","section$subexpression$1$subexpression$1$ebnf$1","section$subexpression$1$subexpression$1$ebnf$2","section$subexpression$1$subexpression$1$string$2"]},{name:"section$subexpression$1",symbols:["section$subexpression$1$subexpression$1"]},{name:"section$subexpression$1",symbols:[]},{name:"section$string$2",symbols:[{literal:"t"},{literal:"t"},{literal:">"}],postprocess:function(s){return s.join("")}},{name:"section$string$3",symbols:[{literal:"<"},{literal:"t"},{literal:"t"}],postprocess:function(s){return s.join("")}},{name:"section$ebnf$1",symbols:[]},{name:"section$ebnf$1",symbols:["section$ebnf$1","choice"],postprocess:function(s){return s[0].concat([s[1]])}},{name:"section$string$4",symbols:[{literal:"<"},{literal:"s"},{literal:"s"}],postprocess:function(s){return s.join("")}},{name:"section",symbols:["section$string$1","_","section$subexpression$1","_","section$string$2","_","oneline","_","section$string$3","_","text","_","section$ebnf$1","_","section$string$4"],postprocess:function(s){const e={};s[2][0]&&s[2][0][2]&&s[2][0][2][0]?(e.timer={},e.timer.timer=parseInt(s[2][0][2][0][1]),e.timer.target=parseInt(s[2][0][2][0][4])):(e.timer={},e.timer.timer=0,e.timer.target=1),s[2][0]&&s[2][0][3]&&s[2][0][3][0]?(e.timer={},e.music=s[2][0][3][0][2]):(e.timer={},e.music=null);const n=s[6],i=s[10];let r=0;const t=s[12].map((s=>(r+=1,s.choiceI=r,s.owner=1,s)));return new o(n,i,t,1,e)}},{name:"choice$string$1",symbols:[{literal:"c"},{literal:"h"},{literal:">"}],postprocess:function(s){return s.join("")}},{name:"choice$subexpression$1$subexpression$1$string$1",symbols:[{literal:"$"},{literal:"{"},{literal:"_"},{literal:"_"},{literal:"i"},{literal:"f"}],postprocess:function(s){return s.join("")}},{name:"choice$subexpression$1$subexpression$1$subexpression$1$string$1",symbols:[{literal:"="},{literal:"="}],postprocess:function(s){return s.join("")}},{name:"choice$subexpression$1$subexpression$1$subexpression$1",symbols:["choice$subexpression$1$subexpression$1$subexpression$1$string$1"]},{name:"choice$subexpression$1$subexpression$1$subexpression$1",symbols:[{literal:">"}]},{name:"choice$subexpression$1$subexpression$1$subexpression$1",symbols:[{literal:"<"}]},{name:"choice$subexpression$1$subexpression$1$subexpression$1$string$2",symbols:[{literal:">"},{literal:"="}],postprocess:function(s){return s.join("")}},{name:"choice$subexpression$1$subexpression$1$subexpression$1",symbols:["choice$subexpression$1$subexpression$1$subexpression$1$string$2"]},{name:"choice$subexpression$1$subexpression$1$subexpression$1$string$3",symbols:[{literal:"<"},{literal:"="}],postprocess:function(s){return s.join("")}},{name:"choice$subexpression$1$subexpression$1$subexpression$1",symbols:["choice$subexpression$1$subexpression$1$subexpression$1$string$3"]},{name:"choice$subexpression$1$subexpression$1$subexpression$1$string$4",symbols:[{literal:"!"},{literal:"="}],postprocess:function(s){return s.join("")}},{name:"choice$subexpression$1$subexpression$1$subexpression$1",symbols:["choice$subexpression$1$subexpression$1$subexpression$1$string$4"]},{name:"choice$subexpression$1$subexpression$1$subexpression$2",symbols:["LNS"]},{name:"choice$subexpression$1$subexpression$1$subexpression$2",symbols:[{literal:"'"},"LNS",{literal:"'"}]},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$1$subexpression$1$subexpression$1$string$1",symbols:[{literal:"="},{literal:"="}],postprocess:function(s){return s.join("")}},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$1$subexpression$1$subexpression$1",symbols:["choice$subexpression$1$subexpression$1$subexpression$3$ebnf$1$subexpression$1$subexpression$1$string$1"]},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$1$subexpression$1$subexpression$1",symbols:[{literal:">"}]},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$1$subexpression$1$subexpression$1",symbols:[{literal:"<"}]},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$1$subexpression$1$subexpression$1$string$2",symbols:[{literal:">"},{literal:"="}],postprocess:function(s){return s.join("")}},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$1$subexpression$1$subexpression$1",symbols:["choice$subexpression$1$subexpression$1$subexpression$3$ebnf$1$subexpression$1$subexpression$1$string$2"]},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$1$subexpression$1$subexpression$1$string$3",symbols:[{literal:"<"},{literal:"="}],postprocess:function(s){return s.join("")}},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$1$subexpression$1$subexpression$1",symbols:["choice$subexpression$1$subexpression$1$subexpression$3$ebnf$1$subexpression$1$subexpression$1$string$3"]},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$1$subexpression$1$subexpression$1$string$4",symbols:[{literal:"!"},{literal:"="}],postprocess:function(s){return s.join("")}},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$1$subexpression$1$subexpression$1",symbols:["choice$subexpression$1$subexpression$1$subexpression$3$ebnf$1$subexpression$1$subexpression$1$string$4"]},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$1$subexpression$1$subexpression$2",symbols:["LNS"]},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$1$subexpression$1$subexpression$2",symbols:[{literal:"'"},"LNS",{literal:"'"}]},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$1$subexpression$1",symbols:[{literal:"&"},"_","LN","_","choice$subexpression$1$subexpression$1$subexpression$3$ebnf$1$subexpression$1$subexpression$1","_","choice$subexpression$1$subexpression$1$subexpression$3$ebnf$1$subexpression$1$subexpression$2","_"]},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$1",symbols:["choice$subexpression$1$subexpression$1$subexpression$3$ebnf$1$subexpression$1"]},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$1$subexpression$2$subexpression$1$string$1",symbols:[{literal:"="},{literal:"="}],postprocess:function(s){return s.join("")}},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$1$subexpression$2$subexpression$1",symbols:["choice$subexpression$1$subexpression$1$subexpression$3$ebnf$1$subexpression$2$subexpression$1$string$1"]},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$1$subexpression$2$subexpression$1",symbols:[{literal:">"}]},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$1$subexpression$2$subexpression$1",symbols:[{literal:"<"}]},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$1$subexpression$2$subexpression$1$string$2",symbols:[{literal:">"},{literal:"="}],postprocess:function(s){return s.join("")}},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$1$subexpression$2$subexpression$1",symbols:["choice$subexpression$1$subexpression$1$subexpression$3$ebnf$1$subexpression$2$subexpression$1$string$2"]},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$1$subexpression$2$subexpression$1$string$3",symbols:[{literal:"<"},{literal:"="}],postprocess:function(s){return s.join("")}},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$1$subexpression$2$subexpression$1",symbols:["choice$subexpression$1$subexpression$1$subexpression$3$ebnf$1$subexpression$2$subexpression$1$string$3"]},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$1$subexpression$2$subexpression$1$string$4",symbols:[{literal:"!"},{literal:"="}],postprocess:function(s){return s.join("")}},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$1$subexpression$2$subexpression$1",symbols:["choice$subexpression$1$subexpression$1$subexpression$3$ebnf$1$subexpression$2$subexpression$1$string$4"]},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$1$subexpression$2$subexpression$2",symbols:["LNS"]},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$1$subexpression$2$subexpression$2",symbols:[{literal:"'"},"LNS",{literal:"'"}]},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$1$subexpression$2",symbols:[{literal:"&"},"_","LN","_","choice$subexpression$1$subexpression$1$subexpression$3$ebnf$1$subexpression$2$subexpression$1","_","choice$subexpression$1$subexpression$1$subexpression$3$ebnf$1$subexpression$2$subexpression$2","_"]},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$1",symbols:["choice$subexpression$1$subexpression$1$subexpression$3$ebnf$1","choice$subexpression$1$subexpression$1$subexpression$3$ebnf$1$subexpression$2"],postprocess:function(s){return s[0].concat([s[1]])}},{name:"choice$subexpression$1$subexpression$1$subexpression$3",symbols:["choice$subexpression$1$subexpression$1$subexpression$3$ebnf$1"]},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$2$subexpression$1$subexpression$1$string$1",symbols:[{literal:"="},{literal:"="}],postprocess:function(s){return s.join("")}},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$2$subexpression$1$subexpression$1",symbols:["choice$subexpression$1$subexpression$1$subexpression$3$ebnf$2$subexpression$1$subexpression$1$string$1"]},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$2$subexpression$1$subexpression$1",symbols:[{literal:">"}]},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$2$subexpression$1$subexpression$1",symbols:[{literal:"<"}]},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$2$subexpression$1$subexpression$1$string$2",symbols:[{literal:">"},{literal:"="}],postprocess:function(s){return s.join("")}},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$2$subexpression$1$subexpression$1",symbols:["choice$subexpression$1$subexpression$1$subexpression$3$ebnf$2$subexpression$1$subexpression$1$string$2"]},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$2$subexpression$1$subexpression$1$string$3",symbols:[{literal:"<"},{literal:"="}],postprocess:function(s){return s.join("")}},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$2$subexpression$1$subexpression$1",symbols:["choice$subexpression$1$subexpression$1$subexpression$3$ebnf$2$subexpression$1$subexpression$1$string$3"]},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$2$subexpression$1$subexpression$1$string$4",symbols:[{literal:"!"},{literal:"="}],postprocess:function(s){return s.join("")}},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$2$subexpression$1$subexpression$1",symbols:["choice$subexpression$1$subexpression$1$subexpression$3$ebnf$2$subexpression$1$subexpression$1$string$4"]},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$2$subexpression$1$subexpression$2",symbols:["LNS"]},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$2$subexpression$1$subexpression$2",symbols:[{literal:"'"},"LNS",{literal:"'"}]},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$2$subexpression$1",symbols:[{literal:"|"},"_","LN","_","choice$subexpression$1$subexpression$1$subexpression$3$ebnf$2$subexpression$1$subexpression$1","_","choice$subexpression$1$subexpression$1$subexpression$3$ebnf$2$subexpression$1$subexpression$2","_"]},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$2",symbols:["choice$subexpression$1$subexpression$1$subexpression$3$ebnf$2$subexpression$1"]},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$2$subexpression$2$subexpression$1$string$1",symbols:[{literal:"="},{literal:"="}],postprocess:function(s){return s.join("")}},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$2$subexpression$2$subexpression$1",symbols:["choice$subexpression$1$subexpression$1$subexpression$3$ebnf$2$subexpression$2$subexpression$1$string$1"]},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$2$subexpression$2$subexpression$1",symbols:[{literal:">"}]},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$2$subexpression$2$subexpression$1",symbols:[{literal:"<"}]},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$2$subexpression$2$subexpression$1$string$2",symbols:[{literal:">"},{literal:"="}],postprocess:function(s){return s.join("")}},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$2$subexpression$2$subexpression$1",symbols:["choice$subexpression$1$subexpression$1$subexpression$3$ebnf$2$subexpression$2$subexpression$1$string$2"]},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$2$subexpression$2$subexpression$1$string$3",symbols:[{literal:"<"},{literal:"="}],postprocess:function(s){return s.join("")}},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$2$subexpression$2$subexpression$1",symbols:["choice$subexpression$1$subexpression$1$subexpression$3$ebnf$2$subexpression$2$subexpression$1$string$3"]},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$2$subexpression$2$subexpression$1$string$4",symbols:[{literal:"!"},{literal:"="}],postprocess:function(s){return s.join("")}},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$2$subexpression$2$subexpression$1",symbols:["choice$subexpression$1$subexpression$1$subexpression$3$ebnf$2$subexpression$2$subexpression$1$string$4"]},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$2$subexpression$2$subexpression$2",symbols:["LNS"]},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$2$subexpression$2$subexpression$2",symbols:[{literal:"'"},"LNS",{literal:"'"}]},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$2$subexpression$2",symbols:[{literal:"|"},"_","LN","_","choice$subexpression$1$subexpression$1$subexpression$3$ebnf$2$subexpression$2$subexpression$1","_","choice$subexpression$1$subexpression$1$subexpression$3$ebnf$2$subexpression$2$subexpression$2","_"]},{name:"choice$subexpression$1$subexpression$1$subexpression$3$ebnf$2",symbols:["choice$subexpression$1$subexpression$1$subexpression$3$ebnf$2","choice$subexpression$1$subexpression$1$subexpression$3$ebnf$2$subexpression$2"],postprocess:function(s){return s[0].concat([s[1]])}},{name:"choice$subexpression$1$subexpression$1$subexpression$3",symbols:["choice$subexpression$1$subexpression$1$subexpression$3$ebnf$2"]},{name:"choice$subexpression$1$subexpression$1$subexpression$3",symbols:[]},{name:"choice$subexpression$1$subexpression$1",symbols:["choice$subexpression$1$subexpression$1$string$1","__","LN","_","choice$subexpression$1$subexpression$1$subexpression$1","_","choice$subexpression$1$subexpression$1$subexpression$2","_","choice$subexpression$1$subexpression$1$subexpression$3",{literal:"}"}]},{name:"choice$subexpression$1",symbols:["choice$subexpression$1$subexpression$1"]},{name:"choice$subexpression$1",symbols:[]},{name:"choice$subexpression$2$string$1",symbols:[{literal:"_"},{literal:"_"},{literal:"i"},{literal:"n"},{literal:"p"},{literal:"u"},{literal:"t"}],postprocess:function(s){return s.join("")}},{name:"choice$subexpression$2",symbols:["choice$subexpression$2$string$1"]},{name:"choice$subexpression$2",symbols:[]},{name:"choice$ebnf$1",symbols:[]},{name:"choice$ebnf$1$subexpression$1$string$1",symbols:[{literal:"$"},{literal:"{"},{literal:"_"},{literal:"_"}],postprocess:function(s){return s.join("")}},{name:"choice$ebnf$1$subexpression$1$subexpression$1",symbols:[{literal:"+"}]},{name:"choice$ebnf$1$subexpression$1$subexpression$1",symbols:[{literal:"-"}]},{name:"choice$ebnf$1$subexpression$1$subexpression$1",symbols:[{literal:"*"}]},{name:"choice$ebnf$1$subexpression$1$subexpression$1",symbols:[{literal:"/"}]},{name:"choice$ebnf$1$subexpression$1$subexpression$1",symbols:[{literal:"="}]},{name:"choice$ebnf$1$subexpression$1$subexpression$2",symbols:["LNS"]},{name:"choice$ebnf$1$subexpression$1$subexpression$2",symbols:[{literal:"'"},"LNS",{literal:"'"}]},{name:"choice$ebnf$1$subexpression$1",symbols:["choice$ebnf$1$subexpression$1$string$1","LN","_","choice$ebnf$1$subexpression$1$subexpression$1","_","choice$ebnf$1$subexpression$1$subexpression$2","_",{literal:"}"},"_"]},{name:"choice$ebnf$1",symbols:["choice$ebnf$1","choice$ebnf$1$subexpression$1"],postprocess:function(s){return s[0].concat([s[1]])}},{name:"choice$ebnf$2",symbols:[]},{name:"choice$ebnf$2$subexpression$1$string$1",symbols:[{literal:"$"},{literal:"{"},{literal:"_"},{literal:"_"}],postprocess:function(s){return s.join("")}},{name:"choice$ebnf$2$subexpression$1",symbols:["choice$ebnf$2$subexpression$1$string$1","LN",{literal:"}"},"_"]},{name:"choice$ebnf$2",symbols:["choice$ebnf$2","choice$ebnf$2$subexpression$1"],postprocess:function(s){return s[0].concat([s[1]])}},{name:"choice$subexpression$3$string$1",symbols:[{literal:"["},{literal:"["}],postprocess:function(s){return s.join("")}},{name:"choice$subexpression$3$ebnf$1$subexpression$1$string$1",symbols:[{literal:"s"},{literal:"c"},{literal:"e"},{literal:"n"},{literal:"e"}],postprocess:function(s){return s.join("")}},{name:"choice$subexpression$3$ebnf$1$subexpression$1",symbols:["choice$subexpression$3$ebnf$1$subexpression$1$string$1","_",{literal:":"},"_"]},{name:"choice$subexpression$3$ebnf$1",symbols:["choice$subexpression$3$ebnf$1$subexpression$1"],postprocess:r},{name:"choice$subexpression$3$ebnf$1",symbols:[],postprocess:function(s){return null}},{name:"choice$subexpression$3$string$2",symbols:[{literal:"]"},{literal:"]"}],postprocess:function(s){return s.join("")}},{name:"choice$subexpression$3",symbols:["choice$subexpression$3$string$1","_","choice$subexpression$3$ebnf$1","int","_","choice$subexpression$3$string$2"]},{name:"choice$string$2",symbols:[{literal:"<"},{literal:"c"},{literal:"h"}],postprocess:function(s){return s.join("")}},{name:"choice",symbols:["choice$string$1","_","choice$subexpression$1","_","oneline","__","choice$subexpression$2","_","choice$ebnf$1","_","choice$ebnf$2","_","choice$subexpression$3","_","choice$string$2","_"],postprocess:function(s){const e=s[2][0]?s[2][0]:null,n=e?{}:null;e&&(n.comparisons=[{variable:e[2],operator:e[4][0],against:e[6].length>1?e[6][1]:e[6][0],type:e[6].length>1?"vs":"vv"}],e[8][0]?(e[8][0].forEach((s=>{n.comparisons.push({variable:s[2],operator:s[4][0],against:s[6].length>1?s[6][1]:s[6][0],type:s[6].length>1?"vs":"vv"})})),n.glue=e[8][0][0][0]):n.glue=null);const i=s[4],r="__input"===s[6][0]?"input":"basic",o=[];s[8].forEach((s=>{o.push({subject:s[1],operator:s[3][0],modifier:s[5].length>1?s[5][1]:s[5][0],type:s[5].length>1?"vs":"vv"})}));const $=[];s[10].forEach((s=>{$.push(s[1])}));let p=1,b="section";return s[12][2]?(p=parseInt(s[12][3]),b="scene"):(p=parseInt(s[12][3]),b="section"),new t(1,p,i,$,r,1,n,o,b)}},{name:"LN$ebnf$1",symbols:[/[a-zA-Z0-9]/]},{name:"LN$ebnf$1",symbols:["LN$ebnf$1",/[a-zA-Z0-9]/],postprocess:function(s){return s[0].concat([s[1]])}},{name:"LN",symbols:["LN$ebnf$1"],postprocess:function(s){return s[0].join("")}},{name:"LNS$ebnf$1",symbols:[/[a-zA-Z0-9 ]/]},{name:"LNS$ebnf$1",symbols:["LNS$ebnf$1",/[a-zA-Z0-9 ]/],postprocess:function(s){return s[0].concat([s[1]])}},{name:"LNS",symbols:["LNS$ebnf$1"],postprocess:function(s){return s[0].join("")}},{name:"int$ebnf$1",symbols:[/[0-9]/]},{name:"int$ebnf$1",symbols:["int$ebnf$1",/[0-9]/],postprocess:function(s){return s[0].concat([s[1]])}},{name:"int",symbols:["int$ebnf$1"],postprocess:function(s){return s[0].join("")}},{name:"oneline$ebnf$1",symbols:[/[a-zA-Z0-9#$@`'"_.%\(\)\{\}|?;:!&\]+*-/\[= |]/]},{name:"oneline$ebnf$1",symbols:["oneline$ebnf$1",/[a-zA-Z0-9#$@`'"_.%\(\)\{\}|?;:!&\]+*-/\[= |]/],postprocess:function(s){return s[0].concat([s[1]])}},{name:"oneline",symbols:["oneline$ebnf$1"],postprocess:function(s){return s[0].join("")}},{name:"text$ebnf$1",symbols:[/[a-zA-Z0-9#$@`'"_.%\(\)\{\}|?;:!&\]+*-/\[=\s|]/]},{name:"text$ebnf$1",symbols:["text$ebnf$1",/[a-zA-Z0-9#$@`'"_.%\(\)\{\}|?;:!&\]+*-/\[=\s|]/],postprocess:function(s){return s[0].concat([s[1]])}},{name:"text",symbols:["text$ebnf$1"],postprocess:function(s){return s[0].join("")}},{name:"_$ebnf$1",symbols:[]},{name:"_$ebnf$1",symbols:["_$ebnf$1",/[\s]/],postprocess:function(s){return s[0].concat([s[1]])}},{name:"_",symbols:["_$ebnf$1"],postprocess:function(s){return null}},{name:"_N$ebnf$1",symbols:[]},{name:"_N$ebnf$1",symbols:["_N$ebnf$1",/[\r\t ]/],postprocess:function(s){return s[0].concat([s[1]])}},{name:"_N",symbols:["_N$ebnf$1"],postprocess:function(s){return null}},{name:"__",symbols:[{literal:" "}]}],ParserStart:"section"};function p(s){return s[0]}class b{constructor(s,{first:e,name:n,music:i,serial:r}){if(!(s instanceof Array))throw new ParsingException("Unexpected argument supplied."+s+"is not an array.");this.sections=s,this.first=parseInt(e)||s[0],this.name=n||"Untitled",this.music=i,this.serial=r||1}}const u={Lexer:void 0,ParserRules:[{name:"scene$string$1",symbols:[{literal:"s"},{literal:"c"},{literal:"e"},{literal:"n"},{literal:"e"},{literal:">"}],postprocess:function(s){return s.join("")}},{name:"scene$subexpression$1$ebnf$1$subexpression$1$string$1",symbols:[{literal:"@"},{literal:"f"},{literal:"i"},{literal:"r"},{literal:"s"},{literal:"t"},{literal:" "}],postprocess:function(s){return s.join("")}},{name:"scene$subexpression$1$ebnf$1$subexpression$1",symbols:["scene$subexpression$1$ebnf$1$subexpression$1$string$1","_","LN","_"]},{name:"scene$subexpression$1$ebnf$1",symbols:["scene$subexpression$1$ebnf$1$subexpression$1"],postprocess:p},{name:"scene$subexpression$1$ebnf$1",symbols:[],postprocess:function(s){return null}},{name:"scene$subexpression$1$ebnf$2$subexpression$1$string$1",symbols:[{literal:"@"},{literal:"m"},{literal:"u"},{literal:"s"},{literal:"i"},{literal:"c"},{literal:" "}],postprocess:function(s){return s.join("")}},{name:"scene$subexpression$1$ebnf$2$subexpression$1",symbols:["scene$subexpression$1$ebnf$2$subexpression$1$string$1","_","nospace","_"]},{name:"scene$subexpression$1$ebnf$2",symbols:["scene$subexpression$1$ebnf$2$subexpression$1"],postprocess:p},{name:"scene$subexpression$1$ebnf$2",symbols:[],postprocess:function(s){return null}},{name:"scene$subexpression$1$subexpression$1$string$1",symbols:[{literal:"@"},{literal:"s"},{literal:"e"},{literal:"c"},{literal:"t"},{literal:"i"},{literal:"o"},{literal:"n"},{literal:"s"},{literal:" "}],postprocess:function(s){return s.join("")}},{name:"scene$subexpression$1$subexpression$1$ebnf$1$subexpression$1",symbols:["LN","__"]},{name:"scene$subexpression$1$subexpression$1$ebnf$1",symbols:["scene$subexpression$1$subexpression$1$ebnf$1$subexpression$1"]},{name:"scene$subexpression$1$subexpression$1$ebnf$1$subexpression$2",symbols:["LN","__"]},{name:"scene$subexpression$1$subexpression$1$ebnf$1",symbols:["scene$subexpression$1$subexpression$1$ebnf$1","scene$subexpression$1$subexpression$1$ebnf$1$subexpression$2"],postprocess:function(s){return s[0].concat([s[1]])}},{name:"scene$subexpression$1$subexpression$1",symbols:["scene$subexpression$1$subexpression$1$string$1","_","scene$subexpression$1$subexpression$1$ebnf$1","_"]},{name:"scene$subexpression$1$ebnf$3$subexpression$1$string$1",symbols:[{literal:"@"},{literal:"n"},{literal:"a"},{literal:"m"},{literal:"e"},{literal:" "}],postprocess:function(s){return s.join("")}},{name:"scene$subexpression$1$ebnf$3$subexpression$1",symbols:["scene$subexpression$1$ebnf$3$subexpression$1$string$1","_","LNS","_"]},{name:"scene$subexpression$1$ebnf$3",symbols:["scene$subexpression$1$ebnf$3$subexpression$1"],postprocess:p},{name:"scene$subexpression$1$ebnf$3",symbols:[],postprocess:function(s){return null}},{name:"scene$subexpression$1",symbols:["scene$subexpression$1$ebnf$1","scene$subexpression$1$ebnf$2","scene$subexpression$1$subexpression$1","scene$subexpression$1$ebnf$3"]},{name:"scene$string$2",symbols:[{literal:"<"},{literal:"s"},{literal:"c"},{literal:"e"},{literal:"n"},{literal:"e"}],postprocess:function(s){return s.join("")}},{name:"scene",symbols:["scene$string$1","_","scene$subexpression$1","_","scene$string$2"],postprocess:function(s){const e=[];s[2][2][2].forEach((s=>{parseInt(s)&&e.push(parseInt(s))}));let n=e[0];s[2][0]&&(n=s[2][0][2]);let i,r=null;return s[2][1]&&(r=s[2][1][2]),s[2][3]&&(i=s[2][3][2]),new b(e,{music:r,first:n,name:i})}},{name:"LN$ebnf$1",symbols:[/[a-zA-Z0-9]/]},{name:"LN$ebnf$1",symbols:["LN$ebnf$1",/[a-zA-Z0-9]/],postprocess:function(s){return s[0].concat([s[1]])}},{name:"LN",symbols:["LN$ebnf$1"],postprocess:function(s){return s[0].join("")}},{name:"LNS$ebnf$1",symbols:[/[a-zA-Z0-9 ]/]},{name:"LNS$ebnf$1",symbols:["LNS$ebnf$1",/[a-zA-Z0-9 ]/],postprocess:function(s){return s[0].concat([s[1]])}},{name:"LNS",symbols:["LNS$ebnf$1"],postprocess:function(s){return s[0].join("")}},{name:"int$ebnf$1",symbols:[/[0-9]/]},{name:"int$ebnf$1",symbols:["int$ebnf$1",/[0-9]/],postprocess:function(s){return s[0].concat([s[1]])}},{name:"int",symbols:["int$ebnf$1"],postprocess:function(s){return s[0].join("")}},{name:"oneline$ebnf$1",symbols:[/[a-zA-Z0-9#$.@`'"_%\(\)\{\}|?;:!&\]+*-/\[= |]/]},{name:"oneline$ebnf$1",symbols:["oneline$ebnf$1",/[a-zA-Z0-9#$.@`'"_%\(\)\{\}|?;:!&\]+*-/\[= |]/],postprocess:function(s){return s[0].concat([s[1]])}},{name:"oneline",symbols:["oneline$ebnf$1"],postprocess:function(s){return s[0].join("")}},{name:"text$ebnf$1",symbols:[/[a-zA-Z0-9#$@`'"_.%\(\)\{\}|?;:!&\]+*-/\[=\s|]/]},{name:"text$ebnf$1",symbols:["text$ebnf$1",/[a-zA-Z0-9#$@`'"_.%\(\)\{\}|?;:!&\]+*-/\[=\s|]/],postprocess:function(s){return s[0].concat([s[1]])}},{name:"text",symbols:["text$ebnf$1"],postprocess:function(s){return s[0].join("")}},{name:"nospace$ebnf$1",symbols:[/[a-zA-Z0-9#$.@`'"_%\(\)\{\}|?;:!&\]+*-/\[=|]/]},{name:"nospace$ebnf$1",symbols:["nospace$ebnf$1",/[a-zA-Z0-9#$.@`'"_%\(\)\{\}|?;:!&\]+*-/\[=|]/],postprocess:function(s){return s[0].concat([s[1]])}},{name:"nospace",symbols:["nospace$ebnf$1"],postprocess:function(s){return s[0].join("")}},{name:"_$ebnf$1",symbols:[]},{name:"_$ebnf$1",symbols:["_$ebnf$1",/[\s]/],postprocess:function(s){return s[0].concat([s[1]])}},{name:"_",symbols:["_$ebnf$1"],postprocess:function(s){return null}},{name:"_N$ebnf$1",symbols:[]},{name:"_N$ebnf$1",symbols:["_N$ebnf$1",/[\r\t ]/],postprocess:function(s){return s[0].concat([s[1]])}},{name:"_N",symbols:["_N$ebnf$1"],postprocess:function(s){return null}},{name:"__",symbols:[{literal:" "}]}],ParserStart:"scene"};var c=n(207),l=n(903);const a=l.T.variable;function x(s){let e=(s=s.replace(l.T.comment,"").replace(/>>/g,"").replace(/<</g,"")).match(l.T.settings);e=e?e[0]:"";const{referrable:n,startAt:r,fullTimer:o,globals:t}=function(s){let e=(s=s.replace(/settings>/,"").replace(/<settings/,"")).match(l.T.referrable);e=e?e[0].replace(/@referrable /,""):"",e="true"===e;let n=(s=s.replace(l.T.referrable,"").replace(/@referrable/,"")).match(l.T.startAt);n=n?n[0].replace(/@startAt /,""):"",n=parseInt(n)?parseInt(n):1;let i=(s=s.replace(l.T.startAt,"")).match(l.T.fullTimer);i=i?i[0].replace(/@fullTimer /,""):"0";const r=i.match(/\d+/g),o={};r.length>1?(o.timer=parseInt(r[0])?parseInt(r[0]):0,o.target=parseInt(r[1])?parseInt(r[1]):1):(o.timer=0,o.target=1);return{referrable:e,startAt:n,fullTimer:o,globals:function(s){const e=s.match(l.T.variableAssignment)||[],n={};return e.forEach((s=>{let e=(s=s.replace(/\$\{/,"").replace(/\}/,"").trim()).match(/[A-Za-z0-9]+/)||[];if(!(e.length>0))return console.warn("Invalid variable ${}!"),{};e=e[0];let i=(s=s.replace(/\w+=/,"")).match(l.T.varValue)||[];i=i.length>0?i[0]:"",""===i&&console.warn("Variable value was read as ''. Are you sure the value should be empty?"),n[e]=parseInt(i)?parseInt(i):i})),n}(s=s.replace(l.T.fullTimer,""))}}(e);s=s.replace(l.T.settings,"");let p=0;const b=(s.match(l.T.section)||[]).map((s=>(p+=1,function(s,e){const n=new i.Parser(i.Grammar.fromCompiled($));n.feed(s);const r=n.results[0];return r.serial=e,r.choices=r.choices.map((s=>(s.owner=e,"input"===s.mode&&(s.text+=`<input type="text" class="if_r-choice-input" id="if_r-choice-input-${s.choiceI}"/>`),s))),r}(s,p)))),a=((s=s.replace(l.T.section,"")).match(l.T.scene)||[]).map(((s,e)=>function(s,e){const n=new i.Parser(i.Grammar.fromCompiled(u));n.feed(s);const r=n.results[0];return r.serial=e,r}(s,e+1))),x=(s.match(l.T.passage)||[]).map((s=>parsePassage(s)));return new c.Z(Date.now().toString(),{sections:b,passages:x,scenes:a},{referrable:n,startAt:r,fullTimer:o},{globals:t})}const h={Story:c.Z,parseText:x,variableRegex:a}}}]);